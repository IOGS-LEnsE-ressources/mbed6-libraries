

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 09 13:24:59 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  000E                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0097                     	;# 
    64  0099                     	;# 
    65  009A                     	;# 
    66  009B                     	;# 
    67  009B                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0113                     	;# 
    78  0114                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  011D                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  018E                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0197                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019C                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019F                     	;# 
   105  020C                     	;# 
   106  020D                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0217                     	;# 
   122  0391                     	;# 
   123  0392                     	;# 
   124  0393                     	;# 
   125  0394                     	;# 
   126  0395                     	;# 
   127  0396                     	;# 
   128  0498                     	;# 
   129  0498                     	;# 
   130  0499                     	;# 
   131  049A                     	;# 
   132  049B                     	;# 
   133  049B                     	;# 
   134  049C                     	;# 
   135  049E                     	;# 
   136  049F                     	;# 
   137  0611                     	;# 
   138  0612                     	;# 
   139  0613                     	;# 
   140  0613                     	;# 
   141  0614                     	;# 
   142  0615                     	;# 
   143  0616                     	;# 
   144  0616                     	;# 
   145  0617                     	;# 
   146  0618                     	;# 
   147  0619                     	;# 
   148  0619                     	;# 
   149  061A                     	;# 
   150  061B                     	;# 
   151  061C                     	;# 
   152  061C                     	;# 
   153  0691                     	;# 
   154  0692                     	;# 
   155  0693                     	;# 
   156  0694                     	;# 
   157  0695                     	;# 
   158  0F0F                     	;# 
   159  0F10                     	;# 
   160  0F11                     	;# 
   161  0F12                     	;# 
   162  0F13                     	;# 
   163  0F14                     	;# 
   164  0F15                     	;# 
   165  0F16                     	;# 
   166  0F17                     	;# 
   167  0F18                     	;# 
   168  0F19                     	;# 
   169  0F1A                     	;# 
   170  0F1B                     	;# 
   171  0F1C                     	;# 
   172  0F1D                     	;# 
   173  0F1E                     	;# 
   174  0F1F                     	;# 
   175  0F20                     	;# 
   176  0F21                     	;# 
   177  0F22                     	;# 
   178  0F23                     	;# 
   179  0F24                     	;# 
   180  0F25                     	;# 
   181  0F26                     	;# 
   182  0F27                     	;# 
   183  0F28                     	;# 
   184  0F29                     	;# 
   185  0F2A                     	;# 
   186  0F2B                     	;# 
   187  0F2C                     	;# 
   188  0F2D                     	;# 
   189  0F2E                     	;# 
   190  0F2F                     	;# 
   191  0F8C                     	;# 
   192  0F8D                     	;# 
   193  0F91                     	;# 
   194  0F95                     	;# 
   195  0F96                     	;# 
   196  0F97                     	;# 
   197  0F9C                     	;# 
   198  0F9D                     	;# 
   199  0F9E                     	;# 
   200  0FE3                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  0091                     	;# 
   243  0092                     	;# 
   244  0093                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011D                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  018E                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0197                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019C                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019F                     	;# 
   289  020C                     	;# 
   290  020D                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0391                     	;# 
   307  0392                     	;# 
   308  0393                     	;# 
   309  0394                     	;# 
   310  0395                     	;# 
   311  0396                     	;# 
   312  0498                     	;# 
   313  0498                     	;# 
   314  0499                     	;# 
   315  049A                     	;# 
   316  049B                     	;# 
   317  049B                     	;# 
   318  049C                     	;# 
   319  049E                     	;# 
   320  049F                     	;# 
   321  0611                     	;# 
   322  0612                     	;# 
   323  0613                     	;# 
   324  0613                     	;# 
   325  0614                     	;# 
   326  0615                     	;# 
   327  0616                     	;# 
   328  0616                     	;# 
   329  0617                     	;# 
   330  0618                     	;# 
   331  0619                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061B                     	;# 
   335  061C                     	;# 
   336  061C                     	;# 
   337  0691                     	;# 
   338  0692                     	;# 
   339  0693                     	;# 
   340  0694                     	;# 
   341  0695                     	;# 
   342  0F0F                     	;# 
   343  0F10                     	;# 
   344  0F11                     	;# 
   345  0F12                     	;# 
   346  0F13                     	;# 
   347  0F14                     	;# 
   348  0F15                     	;# 
   349  0F16                     	;# 
   350  0F17                     	;# 
   351  0F18                     	;# 
   352  0F19                     	;# 
   353  0F1A                     	;# 
   354  0F1B                     	;# 
   355  0F1C                     	;# 
   356  0F1D                     	;# 
   357  0F1E                     	;# 
   358  0F1F                     	;# 
   359  0F20                     	;# 
   360  0F21                     	;# 
   361  0F22                     	;# 
   362  0F23                     	;# 
   363  0F24                     	;# 
   364  0F25                     	;# 
   365  0F26                     	;# 
   366  0F27                     	;# 
   367  0F28                     	;# 
   368  0F29                     	;# 
   369  0F2A                     	;# 
   370  0F2B                     	;# 
   371  0F2C                     	;# 
   372  0F2D                     	;# 
   373  0F2E                     	;# 
   374  0F2F                     	;# 
   375  0F8C                     	;# 
   376  0F8D                     	;# 
   377  0F91                     	;# 
   378  0F95                     	;# 
   379  0F96                     	;# 
   380  0F97                     	;# 
   381  0F9C                     	;# 
   382  0F9D                     	;# 
   383  0F9E                     	;# 
   384  0FE3                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011D                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0391                     	;# 
   491  0392                     	;# 
   492  0393                     	;# 
   493  0394                     	;# 
   494  0395                     	;# 
   495  0396                     	;# 
   496  0498                     	;# 
   497  0498                     	;# 
   498  0499                     	;# 
   499  049A                     	;# 
   500  049B                     	;# 
   501  049B                     	;# 
   502  049C                     	;# 
   503  049E                     	;# 
   504  049F                     	;# 
   505  0611                     	;# 
   506  0612                     	;# 
   507  0613                     	;# 
   508  0613                     	;# 
   509  0614                     	;# 
   510  0615                     	;# 
   511  0616                     	;# 
   512  0616                     	;# 
   513  0617                     	;# 
   514  0618                     	;# 
   515  0619                     	;# 
   516  0619                     	;# 
   517  061A                     	;# 
   518  061B                     	;# 
   519  061C                     	;# 
   520  061C                     	;# 
   521  0691                     	;# 
   522  0692                     	;# 
   523  0693                     	;# 
   524  0694                     	;# 
   525  0695                     	;# 
   526  0F0F                     	;# 
   527  0F10                     	;# 
   528  0F11                     	;# 
   529  0F12                     	;# 
   530  0F13                     	;# 
   531  0F14                     	;# 
   532  0F15                     	;# 
   533  0F16                     	;# 
   534  0F17                     	;# 
   535  0F18                     	;# 
   536  0F19                     	;# 
   537  0F1A                     	;# 
   538  0F1B                     	;# 
   539  0F1C                     	;# 
   540  0F1D                     	;# 
   541  0F1E                     	;# 
   542  0F1F                     	;# 
   543  0F20                     	;# 
   544  0F21                     	;# 
   545  0F22                     	;# 
   546  0F23                     	;# 
   547  0F24                     	;# 
   548  0F25                     	;# 
   549  0F26                     	;# 
   550  0F27                     	;# 
   551  0F28                     	;# 
   552  0F29                     	;# 
   553  0F2A                     	;# 
   554  0F2B                     	;# 
   555  0F2C                     	;# 
   556  0F2D                     	;# 
   557  0F2E                     	;# 
   558  0F2F                     	;# 
   559  0F8C                     	;# 
   560  0F8D                     	;# 
   561  0F91                     	;# 
   562  0F95                     	;# 
   563  0F96                     	;# 
   564  0F97                     	;# 
   565  0F9C                     	;# 
   566  0F9D                     	;# 
   567  0F9E                     	;# 
   568  0FE3                     	;# 
   569  0FE4                     	;# 
   570  0FE5                     	;# 
   571  0FE6                     	;# 
   572  0FE7                     	;# 
   573  0FE8                     	;# 
   574  0FE9                     	;# 
   575  0FEA                     	;# 
   576  0FEB                     	;# 
   577  0FED                     	;# 
   578  0FEE                     	;# 
   579  0FEF                     	;# 
   580  000B                     _INTCONbits	set	11
   581  0011                     _PIR1bits	set	17
   582  000C                     _PORTAbits	set	12
   583  000E                     _PORTCbits	set	14
   584  0099                     _OSCCONbits	set	153
   585  0091                     _PIE1bits	set	145
   586  008C                     _TRISAbits	set	140
   587  008D                     _TRISBbits	set	141
   588  008E                     _TRISCbits	set	142
   589  018C                     _ANSELA	set	396
   590  018D                     _ANSELB	set	397
   591  018E                     _ANSELC	set	398
   592  019F                     _BAUDCONbits	set	415
   593  0199                     _RCREG	set	409
   594  019D                     _RCSTAbits	set	413
   595  019C                     _SPBRGH	set	412
   596  019B                     _SPBRGL	set	411
   597  019A                     _TXREG	set	410
   598  019E                     _TXSTAbits	set	414
   599  0211                     _SSPBUF	set	529
   600  0215                     _SSPCON1bits	set	533
   601  0214                     _SSPSTATbits	set	532
   602                           
   603                           	psect	stringtext
   604  0200                     __pstringtext:	
   605  0200                     STR_2:	
   606  0200  3447               	retlw	71	;'G'
   607  0201  344E               	retlw	78	;'N'
   608  0202  3444               	retlw	68	;'D'
   609  0203  342D               	retlw	45	;'-'
   610  0204  3478               	retlw	120	;'x'
   611  0205  342D               	retlw	45	;'-'
   612  0206  3435               	retlw	53	;'5'
   613  0207  3456               	retlw	86	;'V'
   614  0208  342D               	retlw	45	;'-'
   615  0209  3454               	retlw	84	;'T'
   616  020A  3458               	retlw	88	;'X'
   617  020B  342D               	retlw	45	;'-'
   618  020C  3452               	retlw	82	;'R'
   619  020D  3458               	retlw	88	;'X'
   620  020E  342D               	retlw	45	;'-'
   621  020F  3478               	retlw	120	;'x'
   622  0210  3400               	retlw	0
   623  0211                     STR_1:	
   624  0211  3441               	retlw	65	;'A'
   625  0212  3466               	retlw	102	;'f'
   626  0213  3466               	retlw	102	;'f'
   627  0214  3469               	retlw	105	;'i'
   628  0215  3463               	retlw	99	;'c'
   629  0216  3468               	retlw	104	;'h'
   630  0217  3461               	retlw	97	;'a'
   631  0218  3467               	retlw	103	;'g'
   632  0219  3465               	retlw	101	;'e'
   633  021A  3420               	retlw	32	;' '
   634  021B  344C               	retlw	76	;'L'
   635  021C  3443               	retlw	67	;'C'
   636  021D  3444               	retlw	68	;'D'
   637  021E  3400               	retlw	0
   638                           
   639                           ; #config settings
   640  0000                     
   641                           	psect	cinit
   642  0032                     start_initialization:	
   643  0032                     __initialization:	
   644                           
   645                           ; Clear objects allocated to COMMON
   646  0032  01FB               	clrf	__pbssCOMMON& (0+127)
   647  0033  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   648                           
   649                           ; Clear objects allocated to BANK0
   650  0034  3034               	movlw	low __pbssBANK0
   651  0035  0084               	movwf	4
   652  0036  3000               	movlw	high __pbssBANK0
   653  0037  0085               	movwf	5
   654  0038  3010               	movlw	16
   655  0039  3183  2300         	fcall	clear_ram0
   656  003B                     end_of_initialization:	
   657                           ;End of C runtime variable initialization code
   658                           
   659  003B                     __end_of__initialization:	
   660  003B  0020               	movlb	0
   661  003C  3180  283E         	ljmp	_main	;jump to C main() function
   662                           
   663                           	psect	bssCOMMON
   664  007B                     __pbssCOMMON:	
   665  007B                     _cpt_ligne:	
   666  007B                     	ds	1
   667  007C                     _receivRX:	
   668  007C                     	ds	1
   669                           
   670                           	psect	bssBANK0
   671  0034                     __pbssBANK0:	
   672  0034                     _ligne:	
   673  0034                     	ds	16
   674                           
   675                           	psect	clrtext
   676  0300                     clear_ram0:	
   677                           ;	Called with FSR0 containing the base address, and
   678                           ;	WREG with the size to clear
   679                           
   680  0300  0064               	clrwdt	;clear the watchdog before getting into this loop
   681  0301                     clrloop0:	
   682  0301  0180               	clrf	0	;clear RAM location pointed to by FSR
   683  0302  3101               	addfsr 0,1
   684  0303  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   685  0304  2B01               	goto	clrloop0	;have we reached the end yet?
   686  0305  3400               	retlw	0	;all done for this memory range, return
   687                           
   688                           	psect	cstackCOMMON
   689  0070                     __pcstackCOMMON:	
   690  0070                     ?_initPIC:	
   691  0070                     ?_initRS232:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_initLCD_DOG:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_clearLCD:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_writeLCD:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_initSPI:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_sendSPI:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_writeCmdLCD:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_main:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_isr:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?i1_writeCmdLCD:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?i1_writeLCD:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?i1_sendSPI:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ??i1_sendSPI:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     initSPI@mode:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     i1sendSPI@data:	
   734                           ; 1 bytes @ 0x0
   735                           
   736                           
   737                           ; 1 bytes @ 0x0
   738  0070                     	ds	1
   739  0071                     ??i1_writeCmdLCD:	
   740  0071                     ??i1_writeLCD:	
   741                           ; 0 bytes @ 0x1
   742                           
   743                           
   744                           ; 0 bytes @ 0x1
   745  0071                     	ds	2
   746  0073                     i1writeCmdLCD@c:	
   747  0073                     i1writeLCD@c:	
   748                           ; 1 bytes @ 0x3
   749                           
   750                           
   751                           ; 1 bytes @ 0x3
   752  0073                     	ds	1
   753  0074                     ?i1_setPosition:	
   754  0074                     i1setPosition@colonne:	
   755                           ; 0 bytes @ 0x4
   756                           
   757                           
   758                           ; 1 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ??i1_setPosition:	
   761                           
   762                           ; 0 bytes @ 0x5
   763  0075                     	ds	2
   764  0077                     i1setPosition@ligne:	
   765                           
   766                           ; 1 bytes @ 0x7
   767  0077                     	ds	1
   768  0078                     i1setPosition@adress:	
   769                           
   770                           ; 1 bytes @ 0x8
   771  0078                     	ds	1
   772  0079                     ??_isr:	
   773                           
   774                           ; 0 bytes @ 0x9
   775  0079                     	ds	2
   776                           
   777                           	psect	cstackBANK0
   778  0020                     __pcstackBANK0:	
   779  0020                     ??_initPIC:	
   780  0020                     ??_initRS232:	
   781                           ; 0 bytes @ 0x0
   782                           
   783  0020                     ??_initSPI:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0020                     ??_sendSPI:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0020                     sendSPI@data:	
   790                           ; 0 bytes @ 0x0
   791                           
   792                           
   793                           ; 1 bytes @ 0x0
   794  0020                     	ds	1
   795  0021                     ??_writeLCD:	
   796  0021                     ??_writeCmdLCD:	
   797                           ; 0 bytes @ 0x1
   798                           
   799                           
   800                           ; 0 bytes @ 0x1
   801  0021                     	ds	2
   802  0023                     writeCmdLCD@c:	
   803  0023                     writeLCD@c:	
   804                           ; 1 bytes @ 0x3
   805                           
   806                           
   807                           ; 1 bytes @ 0x3
   808  0023                     	ds	1
   809  0024                     ??_initLCD_DOG:	
   810  0024                     ??_clearLCD:	
   811                           ; 0 bytes @ 0x4
   812                           
   813  0024                     ?_setPosition:	
   814                           ; 0 bytes @ 0x4
   815                           
   816  0024                     setPosition@colonne:	
   817                           ; 0 bytes @ 0x4
   818                           
   819                           
   820                           ; 1 bytes @ 0x4
   821  0024                     	ds	1
   822  0025                     ??_setPosition:	
   823                           
   824                           ; 0 bytes @ 0x5
   825  0025                     	ds	2
   826  0027                     setPosition@ligne:	
   827                           
   828                           ; 1 bytes @ 0x7
   829  0027                     	ds	1
   830  0028                     setPosition@adress:	
   831                           
   832                           ; 1 bytes @ 0x8
   833  0028                     	ds	1
   834  0029                     ?_writeCstStrLCD:	
   835  0029                     writeCstStrLCD@c:	
   836                           ; 0 bytes @ 0x9
   837                           
   838                           
   839                           ; 2 bytes @ 0x9
   840  0029                     	ds	2
   841  002B                     writeCstStrLCD@ligne:	
   842                           
   843                           ; 1 bytes @ 0xB
   844  002B                     	ds	1
   845  002C                     writeCstStrLCD@colonne:	
   846                           
   847                           ; 1 bytes @ 0xC
   848  002C                     	ds	1
   849  002D                     ??_writeCstStrLCD:	
   850                           
   851                           ; 0 bytes @ 0xD
   852  002D                     	ds	3
   853  0030                     writeCstStrLCD@i:	
   854                           
   855                           ; 1 bytes @ 0x10
   856  0030                     	ds	1
   857  0031                     ??_main:	
   858                           
   859                           ; 0 bytes @ 0x11
   860  0031                     	ds	3
   861                           
   862                           	psect	maintext
   863  003E                     __pmaintext:	
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 28 in file "Affichage.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;		None               void
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : B1F/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   883 ;;      Params:         0       0       0       0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0       0
   885 ;;      Temps:          0       3       0       0       0       0       0       0
   886 ;;      Totals:         0       3       0       0       0       0       0       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels required when called:    8
   889 ;; This function calls:
   890 ;;		_clearLCD
   891 ;;		_initLCD_DOG
   892 ;;		_initPIC
   893 ;;		_initRS232
   894 ;;		_writeCstStrLCD
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _main
   902  003E                     _main:	
   903                           
   904                           ;Affichage.c: 29: initPIC();
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   908  003E  3182  22E5  3180   	fcall	_initPIC
   909                           
   910                           ;Affichage.c: 30: _delay((unsigned long)((2000)*(16000000/4000.0)));
   911  0041  3029               	movlw	41
   912  0042  0020               	movlb	0	; select bank0
   913  0043  00B3               	movwf	??_main+2
   914  0044  3096               	movlw	150
   915  0045  00B2               	movwf	??_main+1
   916  0046  30A6               	movlw	166
   917  0047  00B1               	movwf	??_main
   918  0048                     u217:	
   919  0048  0BB1               	decfsz	??_main,f
   920  0049  2848               	goto	u217
   921  004A  0BB2               	decfsz	??_main+1,f
   922  004B  2848               	goto	u217
   923  004C  0BB3               	decfsz	??_main+2,f
   924  004D  2848               	goto	u217
   925                           
   926                           ;Affichage.c: 31: initRS232();
   927  004E  3182  22C2  3180   	fcall	_initRS232
   928                           
   929                           ;Affichage.c: 32: initLCD_DOG();
   930  0051  3180  20A2  3180   	fcall	_initLCD_DOG
   931                           
   932                           ;Affichage.c: 33: _delay((unsigned long)((100)*(16000000/4000.0)));
   933  0054  3003               	movlw	3
   934  0055  0020               	movlb	0	; select bank0
   935  0056  00B3               	movwf	??_main+2
   936  0057  3008               	movlw	8
   937  0058  00B2               	movwf	??_main+1
   938  0059  3078               	movlw	120
   939  005A  00B1               	movwf	??_main
   940  005B                     u227:	
   941  005B  0BB1               	decfsz	??_main,f
   942  005C  285B               	goto	u227
   943  005D  0BB2               	decfsz	??_main+1,f
   944  005E  285B               	goto	u227
   945  005F  0BB3               	decfsz	??_main+2,f
   946  0060  285B               	goto	u227
   947                           
   948                           ;Affichage.c: 34: clearLCD();
   949  0061  3182  2284  3180   	fcall	_clearLCD
   950                           
   951                           ;Affichage.c: 35: _delay((unsigned long)((100)*(16000000/4000.0)));
   952  0064  3003               	movlw	3
   953  0065  0020               	movlb	0	; select bank0
   954  0066  00B3               	movwf	??_main+2
   955  0067  3008               	movlw	8
   956  0068  00B2               	movwf	??_main+1
   957  0069  3078               	movlw	120
   958  006A  00B1               	movwf	??_main
   959  006B                     u237:	
   960  006B  0BB1               	decfsz	??_main,f
   961  006C  286B               	goto	u237
   962  006D  0BB2               	decfsz	??_main+1,f
   963  006E  286B               	goto	u237
   964  006F  0BB3               	decfsz	??_main+2,f
   965  0070  286B               	goto	u237
   966                           
   967                           ;Affichage.c: 36: cpt_ligne = 2;
   968  0071  3002               	movlw	2
   969  0072  0020               	movlb	0	; select bank0
   970  0073  00B1               	movwf	??_main
   971  0074  0831               	movf	??_main,w
   972  0075  00FB               	movwf	_cpt_ligne
   973                           
   974                           ;Affichage.c: 37: writeCstStrLCD("Affichage LCD", 1, 1);
   975  0076  3011               	movlw	low (STR_1| (0+32768))
   976  0077  00A9               	movwf	writeCstStrLCD@c
   977  0078  3082               	movlw	high (STR_1| (0+32768))
   978  0079  00AA               	movwf	writeCstStrLCD@c+1
   979  007A  01AB               	clrf	writeCstStrLCD@ligne
   980  007B  0AAB               	incf	writeCstStrLCD@ligne,f
   981  007C  01AC               	clrf	writeCstStrLCD@colonne
   982  007D  0AAC               	incf	writeCstStrLCD@colonne,f
   983  007E  3180  20FD  3180   	fcall	_writeCstStrLCD
   984                           
   985                           ;Affichage.c: 38: writeCstStrLCD("GND-x-5V-TX-RX-x", 2, 1);
   986  0081  3000               	movlw	low (STR_2| (0+32768))
   987  0082  0020               	movlb	0	; select bank0
   988  0083  00A9               	movwf	writeCstStrLCD@c
   989  0084  3082               	movlw	high (STR_2| (0+32768))
   990  0085  00AA               	movwf	writeCstStrLCD@c+1
   991  0086  3002               	movlw	2
   992  0087  00B1               	movwf	??_main
   993  0088  0831               	movf	??_main,w
   994  0089  00AB               	movwf	writeCstStrLCD@ligne
   995  008A  01AC               	clrf	writeCstStrLCD@colonne
   996  008B  0AAC               	incf	writeCstStrLCD@colonne,f
   997  008C  3180  20FD  3180   	fcall	_writeCstStrLCD
   998  008F                     l910:	
   999                           ;Affichage.c: 40: while(1){
  1000                           
  1001                           
  1002                           ;Affichage.c: 41: PORTCbits.RC5 = 0;
  1003  008F  0020               	movlb	0	; select bank0
  1004  0090  128E               	bcf	14,5	;volatile
  1005                           
  1006                           ;Affichage.c: 42: TXREG = '2';
  1007  0091  3032               	movlw	50
  1008  0092  0023               	movlb	3	; select bank3
  1009  0093  009A               	movwf	26	;volatile
  1010                           
  1011                           ;Affichage.c: 43: _delay((unsigned long)((100)*(16000000/4000.0)));
  1012  0094  3003               	movlw	3
  1013  0095  0020               	movlb	0	; select bank0
  1014  0096  00B3               	movwf	??_main+2
  1015  0097  3008               	movlw	8
  1016  0098  00B2               	movwf	??_main+1
  1017  0099  3078               	movlw	120
  1018  009A  00B1               	movwf	??_main
  1019  009B                     u247:	
  1020  009B  0BB1               	decfsz	??_main,f
  1021  009C  289B               	goto	u247
  1022  009D  0BB2               	decfsz	??_main+1,f
  1023  009E  289B               	goto	u247
  1024  009F  0BB3               	decfsz	??_main+2,f
  1025  00A0  289B               	goto	u247
  1026  00A1  288F               	goto	l910
  1027  00A2                     __end_of_main:	
  1028                           ;Affichage.c: 44: }
  1029                           ;Affichage.c: 46: return;
  1030                           
  1031                           
  1032                           	psect	text1
  1033  00FD                     __ptext1:	
  1034 ;; *************** function _writeCstStrLCD *****************
  1035 ;; Defined at:
  1036 ;;		line 112 in file "lcd_1509.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  c               2    9[BANK0 ] PTR const unsigned char 
  1039 ;;		 -> STR_2(17), STR_1(14), 
  1040 ;;  ligne           1   11[BANK0 ] unsigned char 
  1041 ;;  colonne         1   12[BANK0 ] unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  i               1   16[BANK0 ] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1053 ;;      Params:         0       4       0       0       0       0       0       0
  1054 ;;      Locals:         0       1       0       0       0       0       0       0
  1055 ;;      Temps:          0       3       0       0       0       0       0       0
  1056 ;;      Totals:         0       8       0       0       0       0       0       0
  1057 ;;Total ram usage:        8 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    7
  1060 ;; This function calls:
  1061 ;;		_setPosition
  1062 ;;		_writeLCD
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _writeCstStrLCD
  1070  00FD                     _writeCstStrLCD:	
  1071                           
  1072                           ;lcd_1509.c: 113: char i = 0;
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _writeCstStrLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1076  00FD  0020               	movlb	0	; select bank0
  1077  00FE  01B0               	clrf	writeCstStrLCD@i
  1078                           
  1079                           ;lcd_1509.c: 114: setPosition(ligne, colonne);
  1080  00FF  082C               	movf	writeCstStrLCD@colonne,w
  1081  0100  00AD               	movwf	??_writeCstStrLCD
  1082  0101  082D               	movf	??_writeCstStrLCD,w
  1083  0102  00A4               	movwf	setPosition@colonne
  1084  0103  082B               	movf	writeCstStrLCD@ligne,w
  1085  0104  3182  221F  3180   	fcall	_setPosition
  1086  0107                     l872:	
  1087                           ;lcd_1509.c: 115: while(c[i] != '\0'){
  1088                           
  1089  0107  0020               	movlb	0	; select bank0
  1090  0108  082A               	movf	writeCstStrLCD@c+1,w
  1091  0109  00AE               	movwf	??_writeCstStrLCD+1
  1092  010A  0829               	movf	writeCstStrLCD@c,w
  1093  010B  00AD               	movwf	??_writeCstStrLCD
  1094  010C  0830               	movf	writeCstStrLCD@i,w
  1095  010D  072D               	addwf	??_writeCstStrLCD,w
  1096  010E  0084               	movwf	4
  1097  010F  082E               	movf	??_writeCstStrLCD+1,w
  1098  0110  1803               	skipnc
  1099  0111  0A2E               	incf	??_writeCstStrLCD+1,w
  1100  0112  0085               	movwf	5
  1101  0113  0012               	moviw fsr0++
  1102  0114  1903               	btfsc	3,2
  1103  0115  0008               	return
  1104                           
  1105                           ;lcd_1509.c: 116: writeLCD(c[i]);
  1106  0116  0020               	movlb	0	; select bank0
  1107  0117  082A               	movf	writeCstStrLCD@c+1,w
  1108  0118  00AE               	movwf	??_writeCstStrLCD+1
  1109  0119  0829               	movf	writeCstStrLCD@c,w
  1110  011A  00AD               	movwf	??_writeCstStrLCD
  1111  011B  0830               	movf	writeCstStrLCD@i,w
  1112  011C  072D               	addwf	??_writeCstStrLCD,w
  1113  011D  0084               	movwf	4
  1114  011E  082E               	movf	??_writeCstStrLCD+1,w
  1115  011F  1803               	skipnc
  1116  0120  0A2E               	incf	??_writeCstStrLCD+1,w
  1117  0121  0085               	movwf	5
  1118  0122  0800               	movf	0,w	;code access
  1119  0123  3182  226F  3180   	fcall	_writeLCD
  1120                           
  1121                           ;lcd_1509.c: 117: i++;
  1122  0126  3001               	movlw	1
  1123  0127  0020               	movlb	0	; select bank0
  1124  0128  00AD               	movwf	??_writeCstStrLCD
  1125  0129  082D               	movf	??_writeCstStrLCD,w
  1126  012A  07B0               	addwf	writeCstStrLCD@i,f
  1127  012B  2907               	goto	l872
  1128  012C                     __end_of_writeCstStrLCD:	
  1129                           ;lcd_1509.c: 118: }
  1130                           ;lcd_1509.c: 119: return;
  1131                           
  1132                           
  1133                           	psect	text2
  1134  021F                     __ptext2:	
  1135 ;; *************** function _setPosition *****************
  1136 ;; Defined at:
  1137 ;;		line 128 in file "lcd_1509.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  ligne           1    wreg     unsigned char 
  1140 ;;  colonne         1    4[BANK0 ] unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  ligne           1    7[BANK0 ] unsigned char 
  1143 ;;  adress          1    8[BANK0 ] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;		None               void
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1153 ;;      Params:         0       1       0       0       0       0       0       0
  1154 ;;      Locals:         0       2       0       0       0       0       0       0
  1155 ;;      Temps:          0       2       0       0       0       0       0       0
  1156 ;;      Totals:         0       5       0       0       0       0       0       0
  1157 ;;Total ram usage:        5 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    6
  1160 ;; This function calls:
  1161 ;;		_writeCmdLCD
  1162 ;; This function is called by:
  1163 ;;		_writeCstStrLCD
  1164 ;;		_writeStrLCD
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _setPosition
  1170  021F                     _setPosition:	
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _setPosition: [wreg+status,2+status,0+pclath+cstack]
  1174                           ;setPosition@ligne stored from wreg
  1175  021F  0020               	movlb	0	; select bank0
  1176  0220  00A7               	movwf	setPosition@ligne
  1177                           
  1178                           ;lcd_1509.c: 129: char adress = 0x80 + ((ligne-1) * 16) + (colonne - 1);
  1179  0221  0827               	movf	setPosition@ligne,w
  1180  0222  00A5               	movwf	??_setPosition
  1181  0223  3003               	movlw	3
  1182  0224                     u135:	
  1183  0224  35A5               	lslf	??_setPosition,f
  1184  0225  3EFF               	addlw	-1
  1185  0226  1D03               	skipz
  1186  0227  2A24               	goto	u135
  1187  0228  3525               	lslf	??_setPosition,w
  1188  0229  0724               	addwf	setPosition@colonne,w
  1189  022A  3E6F               	addlw	111
  1190  022B  00A6               	movwf	??_setPosition+1
  1191  022C  0826               	movf	??_setPosition+1,w
  1192  022D  00A8               	movwf	setPosition@adress
  1193                           
  1194                           ;lcd_1509.c: 130: writeCmdLCD(adress);
  1195  022E  0828               	movf	setPosition@adress,w
  1196  022F  3182  2259  3182   	fcall	_writeCmdLCD
  1197                           
  1198                           ;lcd_1509.c: 131: _delay((unsigned long)((1)*(16000000/4000.0)));
  1199  0232  3006               	movlw	6
  1200  0233  0020               	movlb	0	; select bank0
  1201  0234  00A6               	movwf	??_setPosition+1
  1202  0235  3030               	movlw	48
  1203  0236  00A5               	movwf	??_setPosition
  1204  0237                     u257:	
  1205  0237  0BA5               	decfsz	??_setPosition,f
  1206  0238  2A37               	goto	u257
  1207  0239  0BA6               	decfsz	??_setPosition+1,f
  1208  023A  2A37               	goto	u257
  1209  023B  0000               	nop
  1210  023C  0008               	return
  1211  023D                     __end_of_setPosition:	
  1212                           ;lcd_1509.c: 132: return;
  1213                           
  1214                           
  1215                           	psect	text3
  1216  02C2                     __ptext3:	
  1217 ;; *************** function _initRS232 *****************
  1218 ;; Defined at:
  1219 ;;		line 64 in file "Affichage.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1233 ;;      Params:         0       0       0       0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    4
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _initRS232
  1249  02C2                     _initRS232:	
  1250                           
  1251                           ;Affichage.c: 66: TRISBbits.TRISB5 = 1;
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _initRS232: [wreg+status,2]
  1255  02C2  0021               	movlb	1	; select bank1
  1256  02C3  168D               	bsf	13,5	;volatile
  1257                           
  1258                           ;Affichage.c: 67: TRISBbits.TRISB7 = 0;
  1259  02C4  138D               	bcf	13,7	;volatile
  1260                           
  1261                           ;Affichage.c: 71: BAUDCONbits.BRG16 = 0;
  1262  02C5  0023               	movlb	3	; select bank3
  1263  02C6  119F               	bcf	31,3	;volatile
  1264                           
  1265                           ;Affichage.c: 72: TXSTAbits.BRGH = 0;
  1266  02C7  111E               	bcf	30,2	;volatile
  1267                           
  1268                           ;Affichage.c: 73: TXSTAbits.SYNC = 0;
  1269  02C8  121E               	bcf	30,4	;volatile
  1270                           
  1271                           ;Affichage.c: 74: SPBRGH = 0;
  1272  02C9  019C               	clrf	28	;volatile
  1273                           
  1274                           ;Affichage.c: 75: SPBRGL = 25;
  1275  02CA  3019               	movlw	25
  1276  02CB  009B               	movwf	27	;volatile
  1277                           
  1278                           ;Affichage.c: 78: TXSTAbits.TXEN = 1;
  1279  02CC  169E               	bsf	30,5	;volatile
  1280                           
  1281                           ;Affichage.c: 81: RCSTAbits.SPEN = 1;
  1282  02CD  179D               	bsf	29,7	;volatile
  1283                           
  1284                           ;Affichage.c: 83: PIE1bits.RCIE = 1;
  1285  02CE  0021               	movlb	1	; select bank1
  1286  02CF  1691               	bsf	17,5	;volatile
  1287                           
  1288                           ;Affichage.c: 84: INTCONbits.PEIE = 1;
  1289  02D0  170B               	bsf	11,6	;volatile
  1290                           
  1291                           ;Affichage.c: 85: INTCONbits.GIE = 1;
  1292  02D1  178B               	bsf	11,7	;volatile
  1293                           
  1294                           ;Affichage.c: 87: RCSTAbits.CREN = 1;
  1295  02D2  0023               	movlb	3	; select bank3
  1296  02D3  161D               	bsf	29,4	;volatile
  1297  02D4  0008               	return
  1298  02D5                     __end_of_initRS232:	
  1299                           
  1300                           	psect	text4
  1301  02E5                     __ptext4:	
  1302 ;; *************** function _initPIC *****************
  1303 ;; Defined at:
  1304 ;;		line 49 in file "Affichage.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;		None               void
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1318 ;;      Params:         0       0       0       0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    4
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _initPIC
  1334  02E5                     _initPIC:	
  1335                           
  1336                           ;Affichage.c: 51: ANSELA = 0;
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _initPIC: [wreg+status,2+status,0]
  1340  02E5  0023               	movlb	3	; select bank3
  1341  02E6  018C               	clrf	12	;volatile
  1342                           
  1343                           ;Affichage.c: 52: ANSELB = 0;
  1344  02E7  018D               	clrf	13	;volatile
  1345                           
  1346                           ;Affichage.c: 53: ANSELC = 0;
  1347  02E8  018E               	clrf	14	;volatile
  1348                           
  1349                           ;Affichage.c: 55: TRISCbits.TRISC5 = 0;
  1350  02E9  0021               	movlb	1	; select bank1
  1351  02EA  128E               	bcf	14,5	;volatile
  1352                           
  1353                           ;Affichage.c: 56: PORTCbits.RC5 = 1;
  1354  02EB  0020               	movlb	0	; select bank0
  1355  02EC  168E               	bsf	14,5	;volatile
  1356                           
  1357                           ;Affichage.c: 58: OSCCONbits.IRCF = 0b1111;
  1358  02ED  3078               	movlw	120
  1359  02EE  0021               	movlb	1	; select bank1
  1360  02EF  0499               	iorwf	25,f	;volatile
  1361  02F0  0008               	return
  1362  02F1                     __end_of_initPIC:	
  1363                           ;Affichage.c: 61: return;
  1364                           
  1365                           
  1366                           	psect	text5
  1367  00A2                     __ptext5:	
  1368 ;; *************** function _initLCD_DOG *****************
  1369 ;; Defined at:
  1370 ;;		line 20 in file "lcd_1509.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1384 ;;      Params:         0       0       0       0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0
  1386 ;;      Temps:          0       2       0       0       0       0       0       0
  1387 ;;      Totals:         0       2       0       0       0       0       0       0
  1388 ;;Total ram usage:        2 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    6
  1391 ;; This function calls:
  1392 ;;		_initSPI
  1393 ;;		_sendSPI
  1394 ;;		_writeLCD
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _initLCD_DOG
  1402  00A2                     _initLCD_DOG:	
  1403                           
  1404                           ;lcd_1509.c: 21: initSPI(3);
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _initLCD_DOG: [wreg+status,2+status,0+pclath+cstack]
  1408  00A2  3003               	movlw	3
  1409  00A3  3182  22D5  3180   	fcall	_initSPI
  1410                           
  1411                           ;lcd_1509.c: 22: TRISAbits.TRISA2 = 0;
  1412  00A6  0021               	movlb	1	; select bank1
  1413  00A7  110C               	bcf	12,2	;volatile
  1414                           
  1415                           ;lcd_1509.c: 23: _delay((unsigned long)((10)*(16000000/4000.0)));
  1416  00A8  3034               	movlw	52
  1417  00A9  0020               	movlb	0	; select bank0
  1418  00AA  00A5               	movwf	??_initLCD_DOG+1
  1419  00AB  30F1               	movlw	241
  1420  00AC  00A4               	movwf	??_initLCD_DOG
  1421  00AD                     u267:	
  1422  00AD  0BA4               	decfsz	??_initLCD_DOG,f
  1423  00AE  28AD               	goto	u267
  1424  00AF  0BA5               	decfsz	??_initLCD_DOG+1,f
  1425  00B0  28AD               	goto	u267
  1426  00B1  3200               	nop2
  1427                           
  1428                           ;lcd_1509.c: 24: PORTCbits.RC0 = 0;
  1429  00B2  0020               	movlb	0	; select bank0
  1430  00B3  100E               	bcf	14,0	;volatile
  1431                           
  1432                           ;lcd_1509.c: 25: PORTAbits.RA2 = 0;
  1433  00B4  110C               	bcf	12,2	;volatile
  1434                           
  1435                           ;lcd_1509.c: 26: sendSPI(0x29);
  1436  00B5  3029               	movlw	41
  1437  00B6  3182  22F1  3180   	fcall	_sendSPI
  1438                           
  1439                           ;lcd_1509.c: 27: sendSPI(0x1D);
  1440  00B9  301D               	movlw	29
  1441  00BA  3182  22F1  3180   	fcall	_sendSPI
  1442                           
  1443                           ;lcd_1509.c: 28: sendSPI(0x50);
  1444  00BD  3050               	movlw	80
  1445  00BE  3182  22F1  3180   	fcall	_sendSPI
  1446                           
  1447                           ;lcd_1509.c: 29: sendSPI(0x6C);
  1448  00C1  306C               	movlw	108
  1449  00C2  3182  22F1  3180   	fcall	_sendSPI
  1450                           
  1451                           ;lcd_1509.c: 30: sendSPI(0x7C);
  1452  00C5  307C               	movlw	124
  1453  00C6  3182  22F1  3180   	fcall	_sendSPI
  1454                           
  1455                           ;lcd_1509.c: 31: sendSPI(0x03);
  1456  00C9  3003               	movlw	3
  1457  00CA  3182  22F1  3180   	fcall	_sendSPI
  1458                           
  1459                           ;lcd_1509.c: 32: sendSPI(0x0F);
  1460  00CD  300F               	movlw	15
  1461  00CE  3182  22F1  3180   	fcall	_sendSPI
  1462                           
  1463                           ;lcd_1509.c: 33: sendSPI(0x01);
  1464  00D1  3001               	movlw	1
  1465  00D2  3182  22F1  3180   	fcall	_sendSPI
  1466                           
  1467                           ;lcd_1509.c: 34: _delay((unsigned long)((2)*(16000000/4000.0)));
  1468  00D5  300B               	movlw	11
  1469  00D6  0020               	movlb	0	; select bank0
  1470  00D7  00A5               	movwf	??_initLCD_DOG+1
  1471  00D8  3062               	movlw	98
  1472  00D9  00A4               	movwf	??_initLCD_DOG
  1473  00DA                     u277:	
  1474  00DA  0BA4               	decfsz	??_initLCD_DOG,f
  1475  00DB  28DA               	goto	u277
  1476  00DC  0BA5               	decfsz	??_initLCD_DOG+1,f
  1477  00DD  28DA               	goto	u277
  1478  00DE  0000               	nop
  1479                           
  1480                           ;lcd_1509.c: 35: sendSPI(0x06);
  1481  00DF  3006               	movlw	6
  1482  00E0  3182  22F1  3180   	fcall	_sendSPI
  1483                           
  1484                           ;lcd_1509.c: 36: _delay((unsigned long)((10)*(16000000/4000.0)));
  1485  00E3  3034               	movlw	52
  1486  00E4  0020               	movlb	0	; select bank0
  1487  00E5  00A5               	movwf	??_initLCD_DOG+1
  1488  00E6  30F1               	movlw	241
  1489  00E7  00A4               	movwf	??_initLCD_DOG
  1490  00E8                     u287:	
  1491  00E8  0BA4               	decfsz	??_initLCD_DOG,f
  1492  00E9  28E8               	goto	u287
  1493  00EA  0BA5               	decfsz	??_initLCD_DOG+1,f
  1494  00EB  28E8               	goto	u287
  1495  00EC  3200               	nop2
  1496                           
  1497                           ;lcd_1509.c: 37: PORTAbits.RA2 = 1;
  1498  00ED  0020               	movlb	0	; select bank0
  1499  00EE  150C               	bsf	12,2	;volatile
  1500                           
  1501                           ;lcd_1509.c: 38: PORTCbits.RC0 = 1;
  1502  00EF  140E               	bsf	14,0	;volatile
  1503                           
  1504                           ;lcd_1509.c: 39: _delay((unsigned long)((10)*(16000000/4000.0)));
  1505  00F0  3034               	movlw	52
  1506  00F1  00A5               	movwf	??_initLCD_DOG+1
  1507  00F2  30F1               	movlw	241
  1508  00F3  00A4               	movwf	??_initLCD_DOG
  1509  00F4                     u297:	
  1510  00F4  0BA4               	decfsz	??_initLCD_DOG,f
  1511  00F5  28F4               	goto	u297
  1512  00F6  0BA5               	decfsz	??_initLCD_DOG+1,f
  1513  00F7  28F4               	goto	u297
  1514  00F8  3200               	nop2
  1515                           
  1516                           ;lcd_1509.c: 40: writeLCD('_');
  1517  00F9  305F               	movlw	95
  1518  00FA  3182  226F         	fcall	_writeLCD
  1519  00FC  0008               	return
  1520  00FD                     __end_of_initLCD_DOG:	
  1521                           ;lcd_1509.c: 41: return;
  1522                           
  1523                           
  1524                           	psect	text6
  1525  026F                     __ptext6:	
  1526 ;; *************** function _writeLCD *****************
  1527 ;; Defined at:
  1528 ;;		line 77 in file "lcd_1509.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  c               1    wreg     unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  c               1    3[BANK0 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;		None               void
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1542 ;;      Params:         0       0       0       0       0       0       0       0
  1543 ;;      Locals:         0       1       0       0       0       0       0       0
  1544 ;;      Temps:          0       2       0       0       0       0       0       0
  1545 ;;      Totals:         0       3       0       0       0       0       0       0
  1546 ;;Total ram usage:        3 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    5
  1549 ;; This function calls:
  1550 ;;		_sendSPI
  1551 ;; This function is called by:
  1552 ;;		_initLCD_DOG
  1553 ;;		_writeCstStrLCD
  1554 ;;		_writeStrLCD
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _writeLCD
  1560  026F                     _writeLCD:	
  1561                           
  1562                           ;incstack = 0
  1563                           ; Regs used in _writeLCD: [wreg+status,2+status,0+pclath+cstack]
  1564                           ;writeLCD@c stored from wreg
  1565  026F  0020               	movlb	0	; select bank0
  1566  0270  00A3               	movwf	writeLCD@c
  1567                           
  1568                           ;lcd_1509.c: 78: PORTCbits.RC0 = 0;
  1569  0271  100E               	bcf	14,0	;volatile
  1570                           
  1571                           ;lcd_1509.c: 79: PORTAbits.RA2 = 1;
  1572  0272  150C               	bsf	12,2	;volatile
  1573                           
  1574                           ;lcd_1509.c: 80: sendSPI(c);
  1575  0273  0823               	movf	writeLCD@c,w
  1576  0274  3182  22F1  3182   	fcall	_sendSPI
  1577                           
  1578                           ;lcd_1509.c: 81: _delay((unsigned long)((1)*(16000000/4000.0)));
  1579  0277  3006               	movlw	6
  1580  0278  0020               	movlb	0	; select bank0
  1581  0279  00A2               	movwf	??_writeLCD+1
  1582  027A  3030               	movlw	48
  1583  027B  00A1               	movwf	??_writeLCD
  1584  027C                     u307:	
  1585  027C  0BA1               	decfsz	??_writeLCD,f
  1586  027D  2A7C               	goto	u307
  1587  027E  0BA2               	decfsz	??_writeLCD+1,f
  1588  027F  2A7C               	goto	u307
  1589  0280  0000               	nop
  1590                           
  1591                           ;lcd_1509.c: 82: PORTCbits.RC0 = 1;
  1592  0281  0020               	movlb	0	; select bank0
  1593  0282  140E               	bsf	14,0	;volatile
  1594  0283  0008               	return
  1595  0284                     __end_of_writeLCD:	
  1596                           ;lcd_1509.c: 83: return;
  1597                           
  1598                           
  1599                           	psect	text7
  1600  02D5                     __ptext7:	
  1601 ;; *************** function _initSPI *****************
  1602 ;; Defined at:
  1603 ;;		line 19 in file "spi_1509.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  mode            1    wreg     unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  mode            1    0[COMMON] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;		None               void
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1617 ;;      Params:         0       0       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    4
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_initLCD_DOG
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _initSPI
  1633  02D5                     _initSPI:	
  1634                           
  1635                           ;spi_1509.c: 21: TRISCbits.TRISC0 = 0;
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _initSPI: [wreg+status,2+status,0]
  1639  02D5  0021               	movlb	1	; select bank1
  1640  02D6  100E               	bcf	14,0	;volatile
  1641                           
  1642                           ;spi_1509.c: 22: TRISBbits.TRISB6 = 0;
  1643  02D7  130D               	bcf	13,6	;volatile
  1644                           
  1645                           ;spi_1509.c: 23: TRISCbits.TRISC7 = 0;
  1646  02D8  138E               	bcf	14,7	;volatile
  1647                           
  1648                           ;spi_1509.c: 24: PORTCbits.RC0 = 1;
  1649  02D9  0020               	movlb	0	; select bank0
  1650  02DA  140E               	bsf	14,0	;volatile
  1651                           
  1652                           ;spi_1509.c: 27: SSPSTATbits.SMP = 0;
  1653  02DB  0024               	movlb	4	; select bank4
  1654  02DC  1394               	bcf	20,7	;volatile
  1655                           
  1656                           ;spi_1509.c: 28: SSPSTATbits.CKE = 0;
  1657  02DD  1314               	bcf	20,6	;volatile
  1658                           
  1659                           ;spi_1509.c: 30: SSPCON1bits.CKP = 0;
  1660  02DE  1215               	bcf	21,4	;volatile
  1661                           
  1662                           ;spi_1509.c: 31: SSPCON1bits.SSPEN = 1;
  1663  02DF  1695               	bsf	21,5	;volatile
  1664                           
  1665                           ;spi_1509.c: 32: SSPCON1bits.SSPM = 0b0010;
  1666  02E0  0815               	movf	21,w	;volatile
  1667  02E1  39F0               	andlw	-16
  1668  02E2  3802               	iorlw	2
  1669  02E3  0095               	movwf	21	;volatile
  1670  02E4  0008               	return
  1671  02E5                     __end_of_initSPI:	
  1672                           ;spi_1509.c: 35: return;
  1673                           
  1674                           
  1675                           	psect	text8
  1676  0284                     __ptext8:	
  1677 ;; *************** function _clearLCD *****************
  1678 ;; Defined at:
  1679 ;;		line 47 in file "lcd_1509.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1693 ;;      Params:         0       0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0
  1695 ;;      Temps:          0       2       0       0       0       0       0       0
  1696 ;;      Totals:         0       2       0       0       0       0       0       0
  1697 ;;Total ram usage:        2 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    6
  1700 ;; This function calls:
  1701 ;;		_writeCmdLCD
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _clearLCD
  1709  0284                     _clearLCD:	
  1710                           
  1711                           ;lcd_1509.c: 48: PORTCbits.RC0 = 0;
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  1715  0284  0020               	movlb	0	; select bank0
  1716  0285  100E               	bcf	14,0	;volatile
  1717                           
  1718                           ;lcd_1509.c: 49: PORTAbits.RA2 = 0;
  1719  0286  110C               	bcf	12,2	;volatile
  1720                           
  1721                           ;lcd_1509.c: 50: writeCmdLCD(0x01);
  1722  0287  3001               	movlw	1
  1723  0288  3182  2259  3182   	fcall	_writeCmdLCD
  1724                           
  1725                           ;lcd_1509.c: 51: _delay((unsigned long)((2)*(16000000/4000.0)));
  1726  028B  300B               	movlw	11
  1727  028C  0020               	movlb	0	; select bank0
  1728  028D  00A5               	movwf	??_clearLCD+1
  1729  028E  3062               	movlw	98
  1730  028F  00A4               	movwf	??_clearLCD
  1731  0290                     u317:	
  1732  0290  0BA4               	decfsz	??_clearLCD,f
  1733  0291  2A90               	goto	u317
  1734  0292  0BA5               	decfsz	??_clearLCD+1,f
  1735  0293  2A90               	goto	u317
  1736  0294  0000               	nop
  1737                           
  1738                           ;lcd_1509.c: 52: PORTAbits.RA2 = 1;
  1739  0295  0020               	movlb	0	; select bank0
  1740  0296  150C               	bsf	12,2	;volatile
  1741                           
  1742                           ;lcd_1509.c: 53: PORTCbits.RC0 = 1;
  1743  0297  140E               	bsf	14,0	;volatile
  1744  0298  0008               	return
  1745  0299                     __end_of_clearLCD:	
  1746                           ;lcd_1509.c: 54: return;
  1747                           
  1748                           
  1749                           	psect	text9
  1750  0259                     __ptext9:	
  1751 ;; *************** function _writeCmdLCD *****************
  1752 ;; Defined at:
  1753 ;;		line 62 in file "lcd_1509.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  c               1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  c               1    3[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;		None               void
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1767 ;;      Params:         0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       1       0       0       0       0       0       0
  1769 ;;      Temps:          0       2       0       0       0       0       0       0
  1770 ;;      Totals:         0       3       0       0       0       0       0       0
  1771 ;;Total ram usage:        3 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    5
  1774 ;; This function calls:
  1775 ;;		_sendSPI
  1776 ;; This function is called by:
  1777 ;;		_clearLCD
  1778 ;;		_setPosition
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _writeCmdLCD
  1784  0259                     _writeCmdLCD:	
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _writeCmdLCD: [wreg+status,2+status,0+pclath+cstack]
  1788                           ;writeCmdLCD@c stored from wreg
  1789  0259  0020               	movlb	0	; select bank0
  1790  025A  00A3               	movwf	writeCmdLCD@c
  1791                           
  1792                           ;lcd_1509.c: 63: PORTCbits.RC0 = 0;
  1793  025B  100E               	bcf	14,0	;volatile
  1794                           
  1795                           ;lcd_1509.c: 64: PORTAbits.RA2 = 0;
  1796  025C  110C               	bcf	12,2	;volatile
  1797                           
  1798                           ;lcd_1509.c: 65: sendSPI(c);
  1799  025D  0823               	movf	writeCmdLCD@c,w
  1800  025E  3182  22F1  3182   	fcall	_sendSPI
  1801                           
  1802                           ;lcd_1509.c: 66: _delay((unsigned long)((1)*(16000000/4000.0)));
  1803  0261  3006               	movlw	6
  1804  0262  0020               	movlb	0	; select bank0
  1805  0263  00A2               	movwf	??_writeCmdLCD+1
  1806  0264  3030               	movlw	48
  1807  0265  00A1               	movwf	??_writeCmdLCD
  1808  0266                     u327:	
  1809  0266  0BA1               	decfsz	??_writeCmdLCD,f
  1810  0267  2A66               	goto	u327
  1811  0268  0BA2               	decfsz	??_writeCmdLCD+1,f
  1812  0269  2A66               	goto	u327
  1813  026A  0000               	nop
  1814                           
  1815                           ;lcd_1509.c: 67: PORTAbits.RA2 = 1;
  1816  026B  0020               	movlb	0	; select bank0
  1817  026C  150C               	bsf	12,2	;volatile
  1818                           
  1819                           ;lcd_1509.c: 68: PORTCbits.RC0 = 1;
  1820  026D  140E               	bsf	14,0	;volatile
  1821  026E  0008               	return
  1822  026F                     __end_of_writeCmdLCD:	
  1823                           ;lcd_1509.c: 69: return;
  1824                           
  1825                           
  1826                           	psect	text10
  1827  02F1                     __ptext10:	
  1828 ;; *************** function _sendSPI *****************
  1829 ;; Defined at:
  1830 ;;		line 43 in file "spi_1509.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  data            1    wreg     unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  data            1    0[BANK0 ] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;		None               void
  1837 ;; Registers used:
  1838 ;;		wreg
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1844 ;;      Params:         0       0       0       0       0       0       0       0
  1845 ;;      Locals:         0       1       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0
  1847 ;;      Totals:         0       1       0       0       0       0       0       0
  1848 ;;Total ram usage:        1 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    4
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_initLCD_DOG
  1855 ;;		_writeCmdLCD
  1856 ;;		_writeLCD
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _sendSPI
  1862  02F1                     _sendSPI:	
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _sendSPI: [wreg]
  1866                           ;sendSPI@data stored from wreg
  1867  02F1  0020               	movlb	0	; select bank0
  1868  02F2  00A0               	movwf	sendSPI@data
  1869                           
  1870                           ;spi_1509.c: 44: SSPBUF = data;
  1871  02F3  0820               	movf	sendSPI@data,w
  1872  02F4  0024               	movlb	4	; select bank4
  1873  02F5  0091               	movwf	17	;volatile
  1874  02F6                     l141:	
  1875                           ;spi_1509.c: 45: while(!SSPSTATbits.BF);
  1876                           
  1877  02F6  1814               	btfsc	20,0	;volatile
  1878                           
  1879                           ;spi_1509.c: 46: return;
  1880  02F7  0008               	return
  1881  02F8  2AF6               	goto	l141
  1882  02F9                     __end_of_sendSPI:	
  1883                           
  1884                           	psect	intentry
  1885  0004                     __pintentry:	
  1886 ;; *************** function _isr *****************
  1887 ;; Defined at:
  1888 ;;		line 91 in file "Affichage.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1902 ;;      Params:         0       0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0
  1904 ;;      Temps:          2       0       0       0       0       0       0       0
  1905 ;;      Totals:         2       0       0       0       0       0       0       0
  1906 ;;Total ram usage:        2 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    3
  1909 ;; This function calls:
  1910 ;;		i1_setPosition
  1911 ;;		i1_writeLCD
  1912 ;; This function is called by:
  1913 ;;		Interrupt level 1
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917  0004                     _isr:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1921  0004  3180               	pagesel	$
  1922  0005  0020               	movlb	0	; select bank0
  1923  0006  087F               	movf	127,w
  1924  0007  00FA               	movwf	??_isr+1
  1925                           
  1926                           ;Affichage.c: 92: if(PIR1bits.RCIF == 1){
  1927  0008  1E91               	btfss	17,5	;volatile
  1928  0009  282D               	goto	i1l78
  1929                           
  1930                           ;Affichage.c: 93: receivRX = RCREG;
  1931  000A  0023               	movlb	3	; select bank3
  1932  000B  0819               	movf	25,w	;volatile
  1933  000C  00F9               	movwf	??_isr
  1934  000D  0879               	movf	??_isr,w
  1935  000E  00FC               	movwf	_receivRX
  1936                           
  1937                           ;Affichage.c: 96: if((receivRX == '\0') || (receivRX == '\r')){
  1938  000F  087C               	movf	_receivRX,w
  1939  0010  1903               	btfsc	3,2
  1940  0011  2816               	goto	i1l924
  1941  0012  300D               	movlw	13
  1942  0013  067C               	xorwf	_receivRX,w
  1943  0014  1D03               	btfss	3,2
  1944  0015  2828               	goto	i1l930
  1945  0016                     i1l924:	
  1946                           
  1947                           ;Affichage.c: 97: if(cpt_ligne < 3) cpt_ligne += 1;
  1948  0016  3003               	movlw	3
  1949  0017  027B               	subwf	_cpt_ligne,w
  1950  0018  1803               	skipnc
  1951  0019  281F               	goto	i1l75
  1952  001A  3001               	movlw	1
  1953  001B  00F9               	movwf	??_isr
  1954  001C  0879               	movf	??_isr,w
  1955  001D  07FB               	addwf	_cpt_ligne,f
  1956  001E  2821               	goto	i1l928
  1957  001F                     i1l75:	
  1958                           
  1959                           ;Affichage.c: 98: else cpt_ligne = 1;
  1960  001F  01FB               	clrf	_cpt_ligne
  1961  0020  0AFB               	incf	_cpt_ligne,f
  1962  0021                     i1l928:	
  1963                           
  1964                           ;Affichage.c: 99: setPosition(cpt_ligne, 1);
  1965  0021  01F4               	clrf	i1setPosition@colonne
  1966  0022  0AF4               	incf	i1setPosition@colonne,f
  1967  0023  087B               	movf	_cpt_ligne,w
  1968  0024  3182  223D  3180   	fcall	i1_setPosition
  1969                           
  1970                           ;Affichage.c: 100: }
  1971  0027  282B               	goto	i1l932
  1972  0028                     i1l930:	
  1973                           
  1974                           ;Affichage.c: 101: else{
  1975                           ;Affichage.c: 102: writeLCD(receivRX);
  1976  0028  087C               	movf	_receivRX,w
  1977  0029  3182  22AE         	fcall	i1_writeLCD
  1978  002B                     i1l932:	
  1979                           
  1980                           ;Affichage.c: 103: }
  1981                           ;Affichage.c: 104: PIR1bits.RCIF = 0;
  1982  002B  0020               	movlb	0	; select bank0
  1983  002C  1291               	bcf	17,5	;volatile
  1984  002D                     i1l78:	
  1985  002D  087A               	movf	??_isr+1,w
  1986  002E  00FF               	movwf	127
  1987  002F  0009               	retfie
  1988  0030                     __end_of_isr:	
  1989                           
  1990                           	psect	text12
  1991  02AE                     __ptext12:	
  1992 ;; *************** function i1_writeLCD *****************
  1993 ;; Defined at:
  1994 ;;		line 77 in file "lcd_1509.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  c               1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  c               1    3[COMMON] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;		None               void
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2008 ;;      Params:         0       0       0       0       0       0       0       0
  2009 ;;      Locals:         1       0       0       0       0       0       0       0
  2010 ;;      Temps:          2       0       0       0       0       0       0       0
  2011 ;;      Totals:         3       0       0       0       0       0       0       0
  2012 ;;Total ram usage:        3 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		i1_sendSPI
  2017 ;; This function is called by:
  2018 ;;		_isr
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function i1_writeLCD
  2024  02AE                     i1_writeLCD:	
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in i1_writeLCD: [wreg+status,2+status,0+pclath+cstack]
  2028                           ;i1writeLCD@c stored from wreg
  2029  02AE  00F3               	movwf	i1writeLCD@c
  2030                           
  2031                           ;lcd_1509.c: 78: PORTCbits.RC0 = 0;
  2032  02AF  0020               	movlb	0	; select bank0
  2033  02B0  100E               	bcf	14,0	;volatile
  2034                           
  2035                           ;lcd_1509.c: 79: PORTAbits.RA2 = 1;
  2036  02B1  150C               	bsf	12,2	;volatile
  2037                           
  2038                           ;lcd_1509.c: 80: sendSPI(c);
  2039  02B2  0873               	movf	i1writeLCD@c,w
  2040  02B3  3182  22F9  3182   	fcall	i1_sendSPI
  2041                           
  2042                           ;lcd_1509.c: 81: _delay((unsigned long)((1)*(16000000/4000.0)));
  2043  02B6  3006               	movlw	6
  2044  02B7  00F2               	movwf	??i1_writeLCD+1
  2045  02B8  3030               	movlw	48
  2046  02B9  00F1               	movwf	??i1_writeLCD
  2047  02BA                     u33_27:	
  2048  02BA  0BF1               	decfsz	??i1_writeLCD,f
  2049  02BB  2ABA               	goto	u33_27
  2050  02BC  0BF2               	decfsz	??i1_writeLCD+1,f
  2051  02BD  2ABA               	goto	u33_27
  2052  02BE  0000               	nop
  2053                           
  2054                           ;lcd_1509.c: 82: PORTCbits.RC0 = 1;
  2055  02BF  0020               	movlb	0	; select bank0
  2056  02C0  140E               	bsf	14,0	;volatile
  2057  02C1  0008               	return
  2058  02C2                     __end_ofi1_writeLCD:	
  2059                           ;lcd_1509.c: 83: return;
  2060                           
  2061                           
  2062                           	psect	text13
  2063  023D                     __ptext13:	
  2064 ;; *************** function i1_setPosition *****************
  2065 ;; Defined at:
  2066 ;;		line 128 in file "lcd_1509.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  ligne           1    wreg     unsigned char 
  2069 ;;  colonne         1    4[COMMON] unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  ligne           1    7[COMMON] unsigned char 
  2072 ;;  setPosition     1    8[COMMON] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;		None               void
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2082 ;;      Params:         1       0       0       0       0       0       0       0
  2083 ;;      Locals:         2       0       0       0       0       0       0       0
  2084 ;;      Temps:          2       0       0       0       0       0       0       0
  2085 ;;      Totals:         5       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        5 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    2
  2089 ;; This function calls:
  2090 ;;		i1_writeCmdLCD
  2091 ;; This function is called by:
  2092 ;;		_isr
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function i1_setPosition
  2098  023D                     i1_setPosition:	
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in i1_setPosition: [wreg+status,2+status,0+pclath+cstack]
  2102                           ;i1setPosition@ligne stored from wreg
  2103  023D  00F7               	movwf	i1setPosition@ligne
  2104                           
  2105                           ;lcd_1509.c: 129: char adress = 0x80 + ((ligne-1) * 16) + (colonne - 1);
  2106  023E  0877               	movf	i1setPosition@ligne,w
  2107  023F  00F5               	movwf	??i1_setPosition
  2108  0240  3003               	movlw	3
  2109  0241                     u15_25:	
  2110  0241  35F5               	lslf	??i1_setPosition,f
  2111  0242  3EFF               	addlw	-1
  2112  0243  1D03               	skipz
  2113  0244  2A41               	goto	u15_25
  2114  0245  3575               	lslf	??i1_setPosition,w
  2115  0246  0774               	addwf	i1setPosition@colonne,w
  2116  0247  3E6F               	addlw	111
  2117  0248  00F6               	movwf	??i1_setPosition+1
  2118  0249  0876               	movf	??i1_setPosition+1,w
  2119  024A  00F8               	movwf	i1setPosition@adress
  2120                           
  2121                           ;lcd_1509.c: 130: writeCmdLCD(adress);
  2122  024B  0878               	movf	i1setPosition@adress,w
  2123  024C  3182  2299  3182   	fcall	i1_writeCmdLCD
  2124                           
  2125                           ;lcd_1509.c: 131: _delay((unsigned long)((1)*(16000000/4000.0)));
  2126  024F  3006               	movlw	6
  2127  0250  00F6               	movwf	??i1_setPosition+1
  2128  0251  3030               	movlw	48
  2129  0252  00F5               	movwf	??i1_setPosition
  2130  0253                     u34_27:	
  2131  0253  0BF5               	decfsz	??i1_setPosition,f
  2132  0254  2A53               	goto	u34_27
  2133  0255  0BF6               	decfsz	??i1_setPosition+1,f
  2134  0256  2A53               	goto	u34_27
  2135  0257  0000               	nop
  2136  0258  0008               	return
  2137  0259                     __end_ofi1_setPosition:	
  2138                           ;lcd_1509.c: 132: return;
  2139                           
  2140                           
  2141                           	psect	text14
  2142  0299                     __ptext14:	
  2143 ;; *************** function i1_writeCmdLCD *****************
  2144 ;; Defined at:
  2145 ;;		line 62 in file "lcd_1509.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  c               1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  c               1    3[COMMON] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2159 ;;      Params:         0       0       0       0       0       0       0       0
  2160 ;;      Locals:         1       0       0       0       0       0       0       0
  2161 ;;      Temps:          2       0       0       0       0       0       0       0
  2162 ;;      Totals:         3       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        3 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    1
  2166 ;; This function calls:
  2167 ;;		i1_sendSPI
  2168 ;; This function is called by:
  2169 ;;		i1_setPosition
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function i1_writeCmdLCD
  2175  0299                     i1_writeCmdLCD:	
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in i1_writeCmdLCD: [wreg+status,2+status,0+pclath+cstack]
  2179                           ;i1writeCmdLCD@c stored from wreg
  2180  0299  00F3               	movwf	i1writeCmdLCD@c
  2181                           
  2182                           ;lcd_1509.c: 63: PORTCbits.RC0 = 0;
  2183  029A  0020               	movlb	0	; select bank0
  2184  029B  100E               	bcf	14,0	;volatile
  2185                           
  2186                           ;lcd_1509.c: 64: PORTAbits.RA2 = 0;
  2187  029C  110C               	bcf	12,2	;volatile
  2188                           
  2189                           ;lcd_1509.c: 65: sendSPI(c);
  2190  029D  0873               	movf	i1writeCmdLCD@c,w
  2191  029E  3182  22F9  3182   	fcall	i1_sendSPI
  2192                           
  2193                           ;lcd_1509.c: 66: _delay((unsigned long)((1)*(16000000/4000.0)));
  2194  02A1  3006               	movlw	6
  2195  02A2  00F2               	movwf	??i1_writeCmdLCD+1
  2196  02A3  3030               	movlw	48
  2197  02A4  00F1               	movwf	??i1_writeCmdLCD
  2198  02A5                     u35_27:	
  2199  02A5  0BF1               	decfsz	??i1_writeCmdLCD,f
  2200  02A6  2AA5               	goto	u35_27
  2201  02A7  0BF2               	decfsz	??i1_writeCmdLCD+1,f
  2202  02A8  2AA5               	goto	u35_27
  2203  02A9  0000               	nop
  2204                           
  2205                           ;lcd_1509.c: 67: PORTAbits.RA2 = 1;
  2206  02AA  0020               	movlb	0	; select bank0
  2207  02AB  150C               	bsf	12,2	;volatile
  2208                           
  2209                           ;lcd_1509.c: 68: PORTCbits.RC0 = 1;
  2210  02AC  140E               	bsf	14,0	;volatile
  2211  02AD  0008               	return
  2212  02AE                     __end_ofi1_writeCmdLCD:	
  2213                           ;lcd_1509.c: 69: return;
  2214                           
  2215                           
  2216                           	psect	text15
  2217  02F9                     __ptext15:	
  2218 ;; *************** function i1_sendSPI *****************
  2219 ;; Defined at:
  2220 ;;		line 43 in file "spi_1509.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  data            1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  data            1    0[COMMON] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2234 ;;      Params:         0       0       0       0       0       0       0       0
  2235 ;;      Locals:         1       0       0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0
  2237 ;;      Totals:         1       0       0       0       0       0       0       0
  2238 ;;Total ram usage:        1 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		i1_writeCmdLCD
  2244 ;;		i1_writeLCD
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function i1_sendSPI
  2250  02F9                     i1_sendSPI:	
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in i1_sendSPI: [wreg]
  2254                           ;i1sendSPI@data stored from wreg
  2255  02F9  00F0               	movwf	i1sendSPI@data
  2256                           
  2257                           ;spi_1509.c: 44: SSPBUF = data;
  2258  02FA  0870               	movf	i1sendSPI@data,w
  2259  02FB  0024               	movlb	4	; select bank4
  2260  02FC  0091               	movwf	17	;volatile
  2261  02FD                     i1l141:	
  2262                           ;spi_1509.c: 45: while(!SSPSTATbits.BF);
  2263                           
  2264  02FD  1814               	btfsc	20,0	;volatile
  2265                           
  2266                           ;spi_1509.c: 46: return;
  2267  02FE  0008               	return
  2268  02FF  2AFD               	goto	i1l141
  2269  0300                     __end_ofi1_sendSPI:	
  2270  007E                     btemp	set	126	;btemp
  2271  007E                     wtemp	set	126
  2272  007E                     wtemp0	set	126
  2273  0080                     wtemp1	set	128
  2274  0082                     wtemp2	set	130
  2275  0084                     wtemp3	set	132
  2276  0086                     wtemp4	set	134
  2277  0088                     wtemp5	set	136
  2278  007F                     wtemp6	set	127
  2279  007E                     ttemp	set	126
  2280  007E                     ttemp0	set	126
  2281  0081                     ttemp1	set	129
  2282  0084                     ttemp2	set	132
  2283  0087                     ttemp3	set	135
  2284  007F                     ttemp4	set	127
  2285  007E                     ltemp	set	126
  2286  007E                     ltemp0	set	126
  2287  0082                     ltemp1	set	130
  2288  0086                     ltemp2	set	134
  2289  0080                     ltemp3	set	128


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     20      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    writeCstStrLCD@c	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_setPosition
    i1_writeLCD->i1_sendSPI
    i1_setPosition->i1_writeCmdLCD
    i1_writeCmdLCD->i1_sendSPI

Critical Paths under _main in BANK0

    _main->_writeCstStrLCD
    _writeCstStrLCD->_setPosition
    _setPosition->_writeCmdLCD
    _initLCD_DOG->_writeLCD
    _writeLCD->_sendSPI
    _clearLCD->_writeCmdLCD
    _writeCmdLCD->_sendSPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     850
                                             17 BANK0      3     3      0
                           _clearLCD
                        _initLCD_DOG
                            _initPIC
                          _initRS232
                     _writeCstStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeCstStrLCD                                       8     4      4     740
                                              9 BANK0      8     4      4
                        _setPosition
                           _writeLCD
 ---------------------------------------------------------------------------------
 (2) _setPosition                                          5     4      1     244
                                              4 BANK0      5     4      1
                        _writeCmdLCD
 ---------------------------------------------------------------------------------
 (1) _initRS232                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPIC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD_DOG                                          2     2      0      66
                                              4 BANK0      2     2      0
                            _initSPI
                            _sendSPI
                           _writeLCD
 ---------------------------------------------------------------------------------
 (2) _writeLCD                                             3     3      0      44
                                              1 BANK0      3     3      0
                            _sendSPI
 ---------------------------------------------------------------------------------
 (2) _initSPI                                              1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             2     2      0      44
                                              4 BANK0      2     2      0
                        _writeCmdLCD
 ---------------------------------------------------------------------------------
 (3) _writeCmdLCD                                          3     3      0      44
                                              1 BANK0      3     3      0
                            _sendSPI
 ---------------------------------------------------------------------------------
 (3) _sendSPI                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     181
                                              9 COMMON     2     2      0
                      i1_setPosition
                         i1_writeLCD
 ---------------------------------------------------------------------------------
 (6) i1_writeLCD                                           3     3      0      44
                                              1 COMMON     3     3      0
                          i1_sendSPI
 ---------------------------------------------------------------------------------
 (6) i1_setPosition                                        5     4      1     137
                                              4 COMMON     5     4      1
                      i1_writeCmdLCD
 ---------------------------------------------------------------------------------
 (7) i1_writeCmdLCD                                        3     3      0      44
                                              1 COMMON     3     3      0
                          i1_sendSPI
 ---------------------------------------------------------------------------------
 (7) i1_sendSPI                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _writeCmdLCD
       _sendSPI
   _initLCD_DOG
     _initSPI
     _sendSPI
     _writeLCD
       _sendSPI
   _initPIC
   _initRS232
   _writeCstStrLCD
     _setPosition
       _writeCmdLCD
         _sendSPI
     _writeLCD
       _sendSPI

 _isr (ROOT)
   i1_setPosition
     i1_writeCmdLCD
       i1_sendSPI
   i1_writeLCD
     i1_sendSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     14      24       6       45.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      31      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 09 13:24:59 2017

            __CFG_CP$OFF 0000              _SSPSTATbits 0214                      l141 02F6  
                    l910 008F                      l872 0107                      u135 0224  
                    u217 0048                      u307 027C                      u227 005B  
                    u317 0290                      u237 006B                      u327 0266  
                    u247 009B                      u257 0237                      u267 00AD  
                    u277 00DA                      u287 00E8                      u297 00F4  
                    _isr 0004             __CFG_BORV$LO 0000                      wreg 0009  
           ?_initLCD_DOG 0070             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   STR_1 0211                     STR_2 0200                     i1l75 001F  
                   i1l78 002D             __CFG_WRT$OFF 0000                     _main 003E  
                   fsr0h 0005                     fsr0l 0004                     indf0 0000  
                   btemp 007E                     ltemp 007E                     start 0030  
                   ttemp 007E                     wtemp 007E         ??_writeCstStrLCD 002D  
             i1_writeLCD 02AE                    ??_isr 0079              _writeCmdLCD 0259  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l141 02FD  
                  i1l930 0028                    i1l932 002B                    i1l924 0016  
                  i1l928 0021                    _RCREG 0199                    u15_25 0241  
                  u33_27 02BA                    u34_27 0253                    u35_27 02A5  
                  _TXREG 019A          __end_of_initPIC 02F1          __end_of_initSPI 02E5  
                  _ligne 0034          __end_of_sendSPI 02F9           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 0032     i1setPosition@colonne 0074             __end_of_main 00A2  
            initSPI@mode 0070       __size_ofi1_sendSPI 0007    __end_ofi1_writeCmdLCD 02AE  
         __CFG_LPBOR$OFF 0000                   ??_main 0031                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E             ?_setPosition 0024  
                 _SPBRGH 019C                   _SPBRGL 019B                   _SSPBUF 0211  
       __end_of_clearLCD 0299           __CFG_PWRTE$OFF 0000        setPosition@adress 0028  
    writeCstStrLCD@ligne 002B              ?i1_writeLCD 0070                ??_initPIC 0020  
              ??_initSPI 0020                ??_sendSPI 0020         __end_of_writeLCD 0284  
      __end_ofi1_sendSPI 0300     __size_of_initLCD_DOG 005B  __end_of__initialization 003B  
         __pcstackCOMMON 0070              sendSPI@data 0020              i1writeLCD@c 0073  
             __pbssBANK0 0034       __size_of_initRS232 0013      __size_ofi1_writeLCD 0014  
             __pmaintext 003E               __pintentry 0004             ?_writeCmdLCD 0070  
 __size_ofi1_setPosition 001C                ?_clearLCD 0070     __size_of_setPosition 001E  
     setPosition@colonne 0024          __CFG_STVREN$OFF 0000        __end_of_initRS232 02D5  
              ?_writeLCD 0070                  __ptext1 00FD                  __ptext2 021F  
                __ptext3 02C2                  __ptext4 02E5                  __ptext5 00A2  
                __ptext6 026F                  __ptext7 02D5                  __ptext8 0284  
                __ptext9 0259                  _initPIC 02E5                  _initSPI 02D5  
           __size_of_isr 002C                  _sendSPI 02F1               ??_clearLCD 0024  
                clrloop0 0301     end_of_initialization 003B            i1_setPosition 023D  
           writeCmdLCD@c 0023                _RCSTAbits 019D             ??i1_writeLCD 0071  
           __pstringtext 0200               ??_writeLCD 0021                _PORTAbits 000C  
              _PORTCbits 000E  __size_of_writeCstStrLCD 002F         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C                _TRISBbits 008D                _TRISCbits 008E  
         ?i1_setPosition 0074       __end_ofi1_writeLCD 02C2   __size_ofi1_writeCmdLCD 0015  
              _TXSTAbits 019E                i1_sendSPI 02F9           i1writeCmdLCD@c 0073  
            _BAUDCONbits 019F     __size_of_writeCmdLCD 0016      start_initialization 0032  
    i1setPosition@adress 0078            ??_initLCD_DOG 0024              __end_of_isr 0030  
             ?i1_sendSPI 0070         setPosition@ligne 0027            i1_writeCmdLCD 0299  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_clearLCD 0015          ??i1_setPosition 0075      __end_of_initLCD_DOG 00FD  
         ?i1_writeCmdLCD 0070           _writeCstStrLCD 00FD                _cpt_ligne 007B  
               ?_initPIC 0070                 ?_initSPI 0070        __size_of_writeLCD 0015  
              _initRS232 02C2                 ?_sendSPI 0070            ??_setPosition 0025  
              clear_ram0 0300              ??i1_sendSPI 0070                 _PIE1bits 0091  
               _PIR1bits 0011   __end_of_writeCstStrLCD 012C               ?_initRS232 0070  
            _initLCD_DOG 00A2       i1setPosition@ligne 0077      __end_of_setPosition 023D  
        ??i1_writeCmdLCD 0071    writeCstStrLCD@colonne 002C          ?_writeCstStrLCD 0029  
        writeCstStrLCD@c 0029          writeCstStrLCD@i 0030         __size_of_initPIC 000C  
       __size_of_initSPI 0010                 _clearLCD 0284         __size_of_sendSPI 0008  
          i1sendSPI@data 0070                 __ptext10 02F1                 __ptext12 02AE  
               __ptext13 023D                 __ptext14 0299                 __ptext15 02F9  
          __size_of_main 0064                 _receivRX 007C            ??_writeCmdLCD 0021  
               _writeLCD 026F              ??_initRS232 0020               _INTCONbits 000B  
               intlevel1 0000              _setPosition 021F        __CFG_CLKOUTEN$OFF 0000  
              writeLCD@c 0023               _OSCCONbits 0099      __end_of_writeCmdLCD 026F  
            _SSPCON1bits 0215    __end_ofi1_setPosition 0259  
