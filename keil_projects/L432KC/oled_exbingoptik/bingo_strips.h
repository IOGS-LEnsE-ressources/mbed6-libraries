/* BingOptik project / demo
 *		Developed by LEnsE / Institut d'Optique
 *		lense.institutoptique.fr
 *********************************************************
 *		Author : Julien VILLEMEJANE - 26/may/2025
 *********************************************************
 *		Header file containing strip colors declaration
 */

#ifndef     __BINGO_H_HEADER_H__
#define     __BINGO_H_HEADER_H__

#include "mbed.h"
#include "WS2812.h"
#include "PixelArray.h"

#define     STRIP_SIZE_MIRROR      110
#define     STRIP_SIZE_BOBINE      10
#define			BOBINE_NB_LED						5

#define			COLOR_VARIATION					60
#define			COLOR_VARIATION_S				300

#define		SPEED_MAX 	4000		// * 100us
#define		SMOOTH_NB		13

enum Mode {
  SMOOTH,
  INTENSITY,
  BINGO
};

extern enum 		Mode 		mode;

extern	WS2812  strip_mirror;
extern 	PixelArray leds_mirror;

extern 	WS2812  strip_bobine;
extern 	PixelArray leds_bobine;

extern	DigitalOut led1;
extern 	DigitalOut sync_screen;
extern	InterruptIn	mvt_detect_in;

extern	int				mvt_cnt;
extern	int				mvt_cnt_old;
extern	bool			mvt_detected;
extern	int				mvt_speed_cnt;
extern	int				mvt_speed_cnt_old;


extern	DigitalIn   mode_in;
extern	Ticker tik;
extern	Ticker tik_smooth;
extern	DigitalOut  cnt_tik;

extern	int					tik_cnt;
extern	int					tik_cnt_smooth;


/* Sine Wave */
const uint8_t sine_table[STRIP_SIZE_MIRROR] = {
	90, 115, 150, 200, 255, 200, 150, 115,  90,  60,
  50, 	30,  10,   5,   5,   5,   5,   5,  10,  30,  
	50,  60,
	90, 115, 150, 200, 255, 200, 150, 115,  90,  60,
  50, 	30,  10,   5,   5,   5,   5,   5,  10,  30,  
	50,  60,	
	90, 115, 150, 200, 255, 200, 150, 115,  90,  60,
  50, 	30,  10,   5,   5,   5,   5,   5,  10,  30,  
	50,  60,		
	90, 115, 150, 200, 255, 200, 150, 115,  90,  60,
  50, 	30,  10,   5,   5,   5,   5,   5,  10,  30,  
	50,  60,	
	90, 115, 150, 200, 255, 200, 150, 115,  90,  60,
  50, 	30,  10,   5,   5,   5,   5,   5,  10,  30,  
	50,  60
};


const 	float	 R_val[6] = {1.0, 0.0, 0.1, 0, 0.7, 0.8};
const 	float	 G_val[6] = {0.0, 0.6, 0.4, 0, 0, 0.6};
const 	float	 B_val[6] = {0.0, 0, 0.5, 1.0, 0.7, 0};

/*
Rouge (#FF0000)
Jaune-vert (#AFFF00)
Cyan (#00FFFF)
Bleu (#0033FF)
Magenta (#FF00FF)
Orange (#FF9900)
*/

const float R_trans_s[COLOR_VARIATION_S] = {
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
	0.1, 0.1, 0.07,0.06,0.04,0.02,0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
		
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
	0.1, 0.1, 0.07,0.06,0.04,0.02,0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
		
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
	0.1, 0.1, 0.07,0.06,0.04,0.02,0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
		
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
	0.1, 0.1, 0.07,0.06,0.04,0.02,0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
		
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
	0.1, 0.1, 0.07,0.06,0.04,0.02,0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
};

const float G_trans_s[COLOR_VARIATION_S] = {
	0.0, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.8, 0.9,
	0.9, 0.9, 0.8, 0.8, 0.75,0.75,0.74,0.72,0.71, 0.7,
	0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 
	0.2, 0.2,0.15,0.13,0.08, 0.06, 0.02, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.5, 0.6,
	0.6, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.0, 0.0,
	
	0.0, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.8, 0.9,
	0.9, 0.9, 0.8, 0.8, 0.75,0.75,0.74,0.72,0.71, 0.7,
	0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 
	0.2, 0.2,0.15,0.13,0.08, 0.06, 0.02, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.5, 0.6,
	0.6, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.0, 0.0,
	
	0.0, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.8, 0.9,
	0.9, 0.9, 0.8, 0.8, 0.75,0.75,0.74,0.72,0.71, 0.7,
	0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 
	0.2, 0.2,0.15,0.13,0.08, 0.06, 0.02, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.5, 0.6,
	0.6, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.0, 0.0,
	
	0.0, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.8, 0.9,
	0.9, 0.9, 0.8, 0.8, 0.75,0.75,0.74,0.72,0.71, 0.7,
	0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 
	0.2, 0.2,0.15,0.13,0.08, 0.06, 0.02, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.5, 0.6,
	0.6, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.0, 0.0,
	
	0.0, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.8, 0.9,
	0.9, 0.9, 0.8, 0.8, 0.75,0.75,0.74,0.72,0.71, 0.7,
	0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 
	0.2, 0.2,0.15,0.13,0.08, 0.06, 0.02, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.5, 0.6,
	0.6, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.0, 0.0
};


const float B_trans_s[COLOR_VARIATION_S] = {
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
	0.7, 0.7, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1.0, 
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.1, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
	0.7, 0.7, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1.0, 
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.1, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
	0.7, 0.7, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1.0, 
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.1, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
	0.7, 0.7, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1.0, 
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.1, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
	
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
	0.7, 0.7, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1.0, 
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.1, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
};


const float R_trans[COLOR_VARIATION] = {
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
	0.1, 0.1, 0.07,0.06,0.04,0.02,0.0, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
};

const float G_trans[COLOR_VARIATION] = {
	0.0, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.8, 0.9,
	0.9, 0.9, 0.8, 0.8, 0.75,0.75,0.74,0.72,0.71, 0.7,
	0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.3, 0.2, 0.2, 0.2, 
	0.2, 0.2,0.15,0.13,0.08, 0.06, 0.02, 0.0, 0.0, 0.0,
	0.0, 0.0, 0.1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.5, 0.6,
	0.6, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.0, 0.0
};


const float B_trans[COLOR_VARIATION] = {
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	0.0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
	0.7, 0.7, 0.7, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1.0, 
	1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
	1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.1, 0.0,
	0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
};


/* Return a GRB integer from a k-value */
int smooth_rgb(int k);

/* BINGO MODE - Mirror strip*/
void bingo_mirror(void);

/* SMOOTH MODE - Mirror strip*/
void smooth_mirror(void);

#endif